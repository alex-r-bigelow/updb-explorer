'''
Portions of this script automagically generated by GUI2Exe version 0.5.3
Copyright: (c) 2007-2012 Andrea Gavana

Stitched together and edited by Alex Bigelow, 2013
'''
import sys

MAIN_SCRIPT='updb-explorer.py'
APP_NAME = MAIN_SCRIPT[:-3]
VERSION="1.0"
AUTHOR="Alex Bigelow"
ORGANIZATION="University of Utah"
COPYRIGHT="2013"
RESOURCES = ['resources/viz.ui','resources/loading.ui']
DESCRIPTION = "No Description"

if sys.platform == 'win32':
    from distutils.core import setup
    from py2exe.build_exe import py2exe
    
    import glob
    import os
    import zlib
    import shutil
    
    # Remove the build folder
    shutil.rmtree("build", ignore_errors=True)
    
    
    class Target(object):
        """ A simple class that holds information on our executable file. """
        def __init__(self, **kw):
            """ Default class constructor. Update as you need. """
            self.__dict__.update(kw)
    
    folders = {}
    for r in RESOURCES:
        dir = os.path.split(r)[0]
        if not folders.has_key(dir):
            folders[dir] = []
        folders[dir].append(r.replace('/','\\'))
    data_files = []
    for dir,files in folders.iteritems():
        data_files.append((dir,files))
    
    #data_files = [('utils', ['utils\\viz.ui'])]
    
    includes = ['PySide.QtCore', 'PySide.QtGui', 'PySide.QtXml', 'PySide.QtUiTools']
    excludes = ['_gtkagg', '_tkagg', 'bsddb', 'curses', 'email', 'pywin.debugger',
                'pywin.debugger.dbgcon', 'pywin.dialogs', 'tcl',
                'Tkconstants', 'Tkinter']
    packages = []
    dll_excludes = ['libgdk-win32-2.0-0.dll', 'libgobject-2.0-0.dll', 'MSVCP90.dll',
                    'tcl84.dll', 'tk84.dll']
    icon_resources = [(1, 'icon.ico')]
    bitmap_resources = []
    other_resources = []
    
    GUI2Exe_Target_1 = Target(
        # what to build
        script = MAIN_SCRIPT,
        icon_resources = icon_resources,
        bitmap_resources = bitmap_resources,
        other_resources = other_resources,
        dest_base = APP_NAME,    
        version = VERSION,
        company_name = ORGANIZATION,
        copyright = COPYRIGHT,
        name = APP_NAME,
        
        )
    
    setup(
    
        # No UPX or Inno Setup
    
        data_files = data_files,
    
        options = {"py2exe": {"compressed": 0, 
                              "optimize": 0,
                              "includes": includes,
                              "excludes": excludes,
                              "packages": packages,
                              "dll_excludes": dll_excludes,
                              "bundle_files": 3,
                              "dist_dir": "dist",
                              "xref": False,
                              "skip_archive": False,
                              "ascii": False,
                              "custom_boot_script": '',
                             }
                  },
    
        zipfile = None,
        console = [],
        windows = [GUI2Exe_Target_1],
        service = [],
        com_server = [],
        ctypes_com_server = []
        )
    
elif sys.platform == 'darwin':
    from setuptools import setup
    
    resources = RESOURCES
    
    includes = ['PySide.QtCore', 'PySide.QtGui', 'PySide.QtXml', 'PySide.QtUiTools']
    excludes = ['Tkconstants', 'Tkinter', '_gtkagg', '_tkagg', 'bsddb',
                'curses', 'email', 'pywin.debugger', 'pywin.debugger.dbgcon',
                'pywin.dialogs', 'tcl']
    packages = []
    frameworks = []
    dylib_excludes = []
    datamodels = []
    
    setup(
    
        app = [MAIN_SCRIPT],
        setup_requires=['py2app'],
        
        options = {"py2app": {"optimize": 0,
                              "includes": includes,
                              "excludes": excludes,
                              "packages": packages,
                              "dylib_excludes": dylib_excludes,
                              "frameworks": frameworks,
                              "datamodels": datamodels,
                              "resources": resources,
                              "iconfile": r'icon.icns',
                              "plist": None,
                              "extension": ".app",
                              "graph": False,
                              "dist_dir": r"dist",
                              "xref": False,
                              "no_strip": False,
                              "no_chdir": False,
                              "semi_standalone": False,
                              "argv_emulation": True,
                              "use_pythonpath": False,
                              "site_packages": False,
                              "prefer_ppc": False,
                              "debug_modulegraph": False,
                              "debug_skip_macholib": False
                             }
                  },
        )
elif sys.platform == 'linux2':
    from cx_Freeze import setup, Executable
    import PySide.QtCore
    
    includes = ['PySide.QtCore', 'PySide.QtGui', 'PySide.QtXml', 'PySide.QtUiTools']
    excludes = ['bsddb', 'curses', 'email', '_gtkagg', 'pywin.debugger',
                'pywin.debugger.dbgcon', 'pywin.dialogs', 'tcl',
                '_tkagg', 'Tkconstants', 'Tkinter']
    packages = []
    path = []
    
    GUI2Exe_Target_1 = Executable(
        # what to build
        script = MAIN_SCRIPT,
        initScript = None,
        base = None,
        targetDir = r"dist",
        targetName = APP_NAME,
        compress = True,
        copyDependentFiles = False,
        appendScriptToExe = False,
        appendScriptToLibrary = False,
        icon = r"icon.png"
        )
    
    setup(
        
        version = VERSION,
        description = DESCRIPTION,
        author = AUTHOR,
        name = APP_NAME,
        options = {"build_exe": {"includes": includes,
                                 "excludes": excludes,
                                 "packages": packages,
                                 "path": path
                                 }
                   },
                               
        executables = [GUI2Exe_Target_1]
        )
else:
    print "Building an executable for platform %s is not supported yet!" % sys.platform
    print "You should be able to run the app by typing:"
    print ""
    print "python %s" % MAIN_SCRIPT
    print ""
    print "at the command line. If you want to help out, feel free to contribute on Github!"
    sys.exit(1)